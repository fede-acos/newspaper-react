import React, { memo } from "react";

import items from "./itemsNavbar";

import { useSelector } from "react-redux";

function NavBarMobile({
  handleClick,
  isDropDownOpen,
  handleSectionChange,
  dropdownRef,
  user,
  handleClickLogIn,
  handleClickSignUp,
  logOut,
}) {
  const { section } = useSelector((state) => state.section);
  return (
    <div
      ref={dropdownRef}
      className={`fixed top-0 left-0 z-10 h-full w-[50%] -translate-x-full rounded  bg-base-100 transition-transform duration-200 md:w-[40%] lg:w-[30%] xl:w-[20%] ${
        isDropDownOpen ? "translate-x-0 shadow-sm shadow-base-content " : ""
      } `}
    >
      <div className="relative top-5 left-5">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="30"
          height="30"
          viewBox="0 0 246 246"
          version="1.1"
          className="fill-current"
        >
          <path
            d="M 102.299 2.960 C 98.046 5.553, 95.631 10.341, 96.349 14.761 C 97.200 20.007, 99.372 22.548, 106.045 26.105 C 127.202 37.381, 137.502 63.028, 129.999 85.752 C 128.110 91.476, 127.863 93.263, 128.830 94.230 C 130.932 96.332, 133.253 93.912, 137.723 84.959 C 145.551 69.279, 146.711 54.588, 141.429 38.046 C 138.245 28.075, 134.339 21.509, 126.752 13.372 C 115.848 1.678, 109.107 -1.192, 102.299 2.960 M 154.030 10.279 C 150.676 11.976, 147 17.665, 147 21.157 C 147 22.731, 148.990 27.727, 151.422 32.260 C 156.891 42.451, 158.127 47.021, 158.105 56.966 C 158.071 72.440, 153.578 83.294, 143.064 93.299 C 135.877 100.140, 134.833 103, 139.523 103 C 143.231 103, 156.418 93.487, 162.095 86.717 C 167.923 79.768, 173.163 69.510, 175.468 60.540 C 179.769 43.804, 174.400 16.263, 165.816 11.029 C 162.046 8.731, 157.644 8.451, 154.030 10.279 M 56.546 20.545 C 51.738 22.198, 50.309 23.534, 48.952 27.645 C 47.255 32.786, 48.498 37.352, 52.566 40.924 C 55.814 43.775, 56.619 44, 63.587 44 C 79.374 44, 91.053 48.769, 102.299 59.808 C 108.935 66.320, 113.458 74.670, 115.133 83.500 C 116.488 90.638, 118.130 92.967, 120.450 91.042 C 124.279 87.864, 121.103 66.916, 114.833 54 C 110.520 45.114, 98.030 32.700, 88.500 27.826 C 75.733 21.297, 62.879 18.368, 56.546 20.545 M 196.542 41.720 C 189.778 43.471, 187 48.734, 187 59.796 C 187 74.261, 181.044 87.395, 169.975 97.337 C 161.991 104.509, 157.753 106.378, 142.185 109.593 C 140.471 109.947, 139.952 110.645, 140.185 112.285 C 140.477 114.341, 141.097 114.521, 148.814 114.791 C 179.092 115.853, 205.594 92.514, 211.051 59.980 C 212.180 53.254, 212.129 52.074, 210.570 48.789 C 207.989 43.349, 201.969 40.315, 196.542 41.720 M 38.598 55.574 C 22.187 59.256, 16 63.870, 16 72.425 C 16 77.189, 17.904 80.382, 22.011 82.506 C 26.663 84.911, 30.703 84.304, 38.430 80.039 C 51.515 72.816, 63.113 71.320, 77.504 75.001 C 87.594 77.582, 93.053 80.836, 100.671 88.813 C 104.885 93.226, 107.342 95.083, 108.421 94.669 C 111.110 93.637, 110.196 90.461, 104.953 82.622 C 96.494 69.974, 84.142 60.763, 70 56.557 C 61.950 54.163, 46.976 53.694, 38.598 55.574 M 49 88.516 C 34.678 92.029, 22.392 100.247, 11.884 113.340 C 8.841 117.132, 8 119.037, 8 122.139 C 8 129.712, 12.934 135, 20 135 C 25.360 135, 28.661 132.429, 33.133 124.772 C 35.453 120.801, 39.532 115.459, 42.199 112.902 C 55.295 100.346, 75.850 95.637, 92.269 101.431 C 98.342 103.574, 99.194 103.663, 100.566 102.291 C 101.938 100.919, 101.910 100.558, 100.297 98.772 C 97.657 95.848, 88.196 91.338, 79.849 89.025 C 71.287 86.653, 57.522 86.425, 49 88.516 M 210.669 92.046 C 209.239 93.171, 206.633 96.785, 204.878 100.077 C 201.009 107.337, 191.206 116.783, 183.838 120.353 C 171.060 126.544, 158.530 127.570, 146.211 123.435 C 139.008 121.017, 138.495 120.970, 137.292 122.615 C 135.500 125.067, 137.314 126.812, 146.240 131.222 C 171.376 143.642, 199.213 138.767, 219.746 118.350 C 228.580 109.566, 230 107.141, 230 100.835 C 230 97.580, 229.343 96.143, 226.600 93.400 C 223.646 90.446, 222.548 90, 218.235 90 C 214.747 90, 212.496 90.609, 210.669 92.046 M 81.500 110.002 C 73.532 111.200, 68.051 112.949, 60.760 116.621 C 52.531 120.765, 40.855 131.563, 36.135 139.394 C 30.992 147.927, 26.789 161.139, 26.633 169.269 C 26.503 175.992, 26.580 176.214, 30.235 179.570 C 33.341 182.422, 34.734 183, 38.500 183 C 42.251 183, 43.663 182.420, 46.714 179.623 L 50.399 176.246 51.105 164.873 C 51.494 158.618, 52.242 152.146, 52.767 150.491 C 56.075 140.068, 64.973 128.622, 74.582 122.429 C 79.481 119.271, 86.386 116.851, 94.250 115.536 C 97.335 115.021, 98 114.495, 98 112.571 C 98 109.020, 93.100 108.257, 81.500 110.002 M 94.127 123.323 C 78.363 131.754, 66.509 147.187, 62.421 164.600 C 58.850 179.813, 63.038 205.497, 70.178 212.166 C 75.966 217.573, 84.926 216.450, 88.974 209.810 C 91.848 205.097, 91.500 201.586, 87.438 194.323 C 81.753 184.157, 79.893 177.657, 79.905 168 C 79.926 152.145, 84.318 141.593, 95.396 130.785 C 101.245 125.079, 102.100 123.825, 101.024 122.529 C 99.390 120.560, 99.266 120.574, 94.127 123.323 M 104.722 131.754 C 101.562 135.246, 95.954 148.733, 94.420 156.528 C 90.286 177.549, 98.339 200.054, 115.684 215.947 C 123.388 223.007, 127.939 224.835, 133.356 223.047 C 140.446 220.708, 143.662 213.030, 140.353 206.340 C 139.027 203.659, 136.583 201.434, 131.764 198.522 C 117.944 190.172, 109.928 179.051, 106.444 163.394 C 104.494 154.626, 104.938 148.077, 108.104 138.928 C 109.248 135.624, 109.931 132.263, 109.623 131.460 C 108.866 129.487, 106.654 129.619, 104.722 131.754 M 128.311 131.631 C 127.965 132.534, 128.760 135.231, 130.093 137.671 C 142.365 160.144, 168.335 173.406, 193.511 170.055 C 207.404 168.206, 217.973 163.888, 220.483 159.033 C 224.224 151.798, 220.788 143.140, 213.361 141.089 C 209.191 139.938, 209.017 139.988, 197.500 145.635 C 187.079 150.745, 179.172 152.461, 169.937 151.619 C 156.727 150.415, 146.376 145.413, 137.703 136.046 C 132.018 129.905, 129.439 128.693, 128.311 131.631 M 116.627 134.529 C 114.211 140.825, 117.646 159.764, 123.241 171 C 128.202 180.963, 140.305 192.640, 151.056 197.836 C 160.385 202.345, 169.982 204.963, 177.265 204.985 C 186.953 205.015, 193.068 194.700, 188.114 186.684 C 185.373 182.250, 182.633 181.285, 170.882 180.617 C 155.517 179.744, 144.184 174.452, 134.136 163.458 C 128.065 156.816, 125.043 150.739, 122.965 141 C 121.650 134.838, 120.998 133.446, 119.310 133.197 C 118.119 133.022, 116.991 133.582, 116.627 134.529"
            stroke="none"
            fillRule="evenodd"
          />
        </svg>
      </div>
      <button
        className="absolute top-6 right-4  opacity-90"
        onClick={() => handleClick()}
      >
        <svg
          viewBox="0 0 38 38"
          width="20px"
          height="20px"
          aria-hidden="true'"
          className="fill-base-content hover:opacity-90"
        >
          <g stroke="none" strokeWidth="1" fillRule="evenodd">
            <polygon
              fillRule="nonzero"
              points="33.4 0 19 14.4 4.601 0 0 4.6 14.4 19 0 33.4 4.6 38 19 23.6 33.4 38 38 33.399 23.6 18.999 38 4.6"
            ></polygon>
          </g>
        </svg>
      </button>
      <ul className=" absolute top-20 flex w-full flex-col items-center gap-2 p-2 ">
        <span className="mb-4 h-[1px] w-[90%] bg-base-content opacity-20"></span>
        {items.map((item) => (
          <li
            key={item.name}
            className={` w-full rounded-md  p-2 pl-4 text-left text-xl text-base-content sm:text-2xl ${
              section === item.value
                ? "text-base-50 bg-base-300"
                : "hover:text-base-50 hover:bg-base-200 active:bg-base-200"
            }`}
          >
            <a
              className="cursor-pointer"
              onClick={() => handleSectionChange(item.value)}
            >
              {item.name}
            </a>
          </li>
        ))}
        {user ? (
          <li className="w-full">
            <button
              onClick={logOut}
              className="btn-primary mt-2 w-full p-2 text-center text-lg sm:text-2xl md:hidden"
            >
              Log Out
            </button>
          </li>
        ) : (
          <>
            <li
              onClick={handleClickLogIn}
              className="btn-primary btn mt-10  w-full  cursor-pointer  rounded-md p-1  text-center text-xl  sm:text-2xl md:hidden"
            >
              Log In
            </li>
            <li
              onClick={handleClickSignUp}
              className=" btn w-full  rounded-md  p-1 text-center text-xl  sm:text-2xl md:hidden"
            >
              Subscribe
            </li>
          </>
        )}
      </ul>
    </div>
  );
}

export default NavBarMobile;
